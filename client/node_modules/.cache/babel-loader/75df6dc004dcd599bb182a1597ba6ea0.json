{"ast":null,"code":"import _defineProperty from \"/Users/mymac/Desktop/rent-cars/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_CARS } from \"../actions/types\";\nconst INITIAL_STATE = {\n  cars: {\n    data: []\n  },\n  car: {\n    data: {}\n  }\n};\nexport const carReducer = (state = INITIAL_STATE.cars, action) => {\n  switch (action.type) {\n    case FETCH_CARS:\n      return _objectSpread({}, state, {\n        data: action.cars\n      });\n\n    default:\n      return state;\n  }\n};\nexport const selectedCarReducer = (state, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/mymac/Desktop/rent-cars/client/src/reducers/car-reducer.js"],"names":["FETCH_CARS","INITIAL_STATE","cars","data","car","carReducer","state","action","type","selectedCarReducer"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AADF,GADc;AAIpBC,EAAAA,GAAG,EAAE;AACHD,IAAAA,IAAI,EAAE;AADH;AAJe,CAAtB;AASA,OAAO,MAAME,UAAU,GAAG,CAACC,KAAK,GAAGL,aAAa,CAACC,IAAvB,EAA6BK,MAA7B,KAAwC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,UAAL;AACE,+BAAYM,KAAZ;AAAmBH,QAAAA,IAAI,EAAEI,MAAM,CAACL;AAAhC;;AAEF;AACE,aAAOI,KAAP;AALJ;AAOD,CARM;AAUP,OAAO,MAAMG,kBAAkB,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE;AACE,aAAOF,KAAP;AAFJ;AAID,CALM","sourcesContent":["import { FETCH_CARS } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  cars: {\n    data: []\n  },\n  car: {\n    data: {}\n  }\n};\n\nexport const carReducer = (state = INITIAL_STATE.cars, action) => {\n  switch (action.type) {\n    case FETCH_CARS:\n      return { ...state, data: action.cars };\n\n    default:\n      return state;\n  }\n};\n\nexport const selectedCarReducer = (state, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}